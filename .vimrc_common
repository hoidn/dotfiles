" Shared rc file for vim and neovim.

let mapleader=" "

" map , to toggle fold
nnoremap , za

imap jk <Esc>
map <leader>h :wincmd h<CR>
map <leader>j :wincmd j<CR>
map <leader>k :wincmd k<CR>
map <leader>l :wincmd l<CR>

" Map ctrl-s to save in normal and insert mode
nmap <C-s> :w<CR>
imap <c-s> <Esc>:w<CR>

" multiline edit shortcut
 noremap <leader>n :norm 
 noremap <leader>i :norm i#<CR>

" Toggle showing invisible characters
map <leader>s :set list!<CR>

noremap ]<leader> :lnext<CR>
noremap [<leader> :lprevious<CR>

let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-v': 'vsplit' }

" Default fzf layout
" - down / up / left / right
" - window (nvim only)
let g:fzf_layout = { 'down': '~40%' }

nnoremap <silent> <leader>F :Files<CR>
nnoremap <silent> <leader>b :Buffers<CR>
nnoremap <leader>f :Locate 
nnoremap <leader>w :Windows<CR>
" vim command history
nnoremap <leader>H :History:<CR>
" recently opened files
nnoremap <leader>c :History<CR>
" "nnoremap <silent> <leader>; :BLines<CR>
" "nnoremap <silent> <leader>o :BTags<CR>
" "nnoremap <silent> <leader>O :Tags<CR>
" "nnoremap <silent> <leader>? :History<CR>
" "nnoremap <silent> <leader>/ :execute 'Ag ' . input('Ag/')<CR>
nnoremap  <leader>a :Ag<CR>

function! SearchVisualSelectionWithAg() range
	let old_reg = getreg('"')
	let old_regtype = getregtype('"')
	let old_clipboard = &clipboard
	set clipboard&
	normal! ""gvy
	let selection = getreg('"')
	call setreg('"', old_reg, old_regtype)
	let &clipboard = old_clipboard
	execute 'Ag' selection
endfunction
vnoremap  K :call SearchVisualSelectionWithAg()<CR>

function RangerExplorer()
    exec "silent !ranger --choosefile=/tmp/vim_ranger_current_file " . expand("%:p:h")
    if filereadable('/tmp/vim_ranger_current_file')
        exec 'edit ' . system('cat /tmp/vim_ranger_current_file')
        call system('rm /tmp/vim_ranger_current_file')
    endif
    redraw!
endfun
" Enter ranger file manager
map <Leader>x :call RangerExplorer()<CR>

" Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null %

set clipboard=unnamed

" This gets jedi to show call signatures when YCM is enabled
call jedi#configure_call_signatures()
let g:jedi#show_call_signatures = 1
let g:jedi#show_call_signatures_delay = 0

let g:jedi#use_splits_not_buffers = "bottom"
let g:jedi#completions_enabled = 0

" jedi key mappings
autocmd Filetype python vnoremap <leader>d "_d
autocmd Filetype python vnoremap <leader>p "_dP
